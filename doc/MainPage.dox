namespace Magnum {
/** @mainpage

<p><strong>%Magnum</strong> is simple graphical engine written in C++11 and OpenGL 3 Core Profile. Features:</p>
<ul>
<li>Easy-to-use templated @ref Math "mathematical library" for matrix/vector calculations.</li>
<li>Comprehensive use of C++11 features for security, performance and ease of development.</li>
<li>Hierarchical @ref Scene "scene graph" which supports transformation caching for better performance, classes for convenient usage of @ref AbstractShaderProgram "shaders", @ref Buffer "buffers" and @ref Texture "textures".</li>
<li>@ref MeshTools "Mesh tools" for cleaning, optimizing and generating meshes.</li>
<li>Collection of pre-made @ref Primitives "graphic primitives" for testing purposes.</li>
</ul>

@section BasicUsage Basic usage

<p>%Scene in %Magnum is composed of hierarchically connected object instances.
To build the scene, you need Scene object with assigned Camera and some Object
instances. When rendering using Scene::draw(), the engine goes through all
objects connected to the scene and calls Object::draw() on them.</p>
<p>All objects are by default empty. To make object renderable in the scene,
you must reimplement Object::draw(), and for example bind an
@ref AbstractShaderProgram "shader", @ref Texture "texture" and
render an prepared @ref Mesh "mesh".</p>
*/
}
